{"version":3,"sources":["assets/images/icons/collapsible-arrow.svg","constants/language.js","actions/common.js","constants/temp.js","components/Avatar/Avatar.js","components/Button/Button.js","components/Input/Checkbox.js","components/Input/Input.js","components/Input/Dropdown.js","components/Text/Text.js","components/Modal/Modal.js","services/validation.js","modules/StoreInformation/components/EditProfileModal/EditProfileModal.js","actions/index.js","modules/StoreInformation/components/ProfileInformation/ProfileInformation.js","modules/StoreInformation/components/DeliveryMessage/DeliveryMessage.js","modules/StoreInformation/pages/Home/Home.js","App.js","serviceWorker.js","reducers/temp.js","reducers/index.js","configs/store.js","index.js"],"names":["module","exports","Lang","storeInfo","name","address","phone","redInvoiceInfo","companyName","mst","editProfile","deliveryMessage","writeYourMessage","update","editStoreProfile","remove","uploadImage","storeName","district","city","storeAddress","companyAddress","save","cancel","basicInfo","ok","saveSuccess","incorrectPhoneFormat","messagePhoneFormat","Alert","head","body","onClose","clickConfirm","showCloseButton","showCancelButton","message","_","isEmpty","swal","title","html","imageUrl","imageWidth","imageHeight","imageAlt","customClass","confirmButtonClass","cancelButtonClass","buttonsStyling","confirmButtonText","focusConfirm","focusCancel","cancelButtonText","then","confirm","value","GET_DATA_SUCCESS","SAVE_DATA_SUCCESS","Avatar","src","className","style","backgroundImage","textMapper","white","gray","black","Button","props","label","size","color","children","onClick","link","textColor","bold","classNames","href","defaultProps","Checkbox","toggle","e","stopPropagation","onCheck","this","text","center","id","blocked","checked","status","alignItems","type","htmlFor","Component","Input","state","stateValue","focus","password","clear","setState","handleChange","onChange","onChangeId","readonly","target","handleFocus","handleBlur","handleKeyPress","key","onEnter","icon","disabled","placeholder","alt","autoFocus","onBlur","onFocus","onKeyPress","ref","node","input","Dropdown","prevState","showOptions","selectItem","selectedOption","renderOption","option","selectedItem","dropdownRef","React","createRef","nextOption","find","options","current","addEventListener","width","customStyle","renderOptionFunc","isFunction","tabIndex","require","autoHeight","map","Text","Modal","isActive","close","document","querySelector","classList","nextProps","add","hideCloseBtn","checkers","check","test","invalidInfo","getInvalidValidationFrom","sources","result","compact","checker","compareValue","cities","districts","EditProfileModal","onChangeInput","openImagePicker","documentImgInput","click","removeFileUpload","saveData","validateSources","Validation","invalidateInfo","postData","onCloseModal","data","file","files","reader","FileReader","onload","readAsDataURL","companyDistrict","companyCity","srcImg","el","handleFileUpload","accept","toUpperCase","connect","temp","dispatch","payload","ProfileInformation","openModal","renderInfoText","leftText","rightText","Fragment","DeliveryMessage","deliveryMessageId","onChangeCheckbox","index","renderInputMessage","item","Home","getData","App","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","error","createStore","applyMiddleware","thunk","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iSAAAA,EAAOC,QAAU,IAA0B,+C,0PCA9BC,EAAO,CAClBC,UAAW,aACXC,KAAM,OACNC,QAAS,UACTC,MAAO,QACPC,eAAgB,mBAChBC,YAAa,eACbC,IAAK,MACLC,YAAa,eACbC,gBAAiB,2BACjBC,iBAAkB,qBAClBC,OAAQ,SACRC,iBAAkB,qBAClBC,OAAQ,SACRC,YAAa,eACbC,UAAW,aACXC,SAAU,WACVC,KAAM,OACNC,aAAc,gBACdC,eAAgB,kBAChBC,KAAM,OACNC,OAAQ,SACRC,UAAW,aACXC,GAAI,KACJC,YAAa,eACbC,qBAAsB,QACtBC,mBAAoB,yCCpBtB,SAASC,EAAMC,EAAMC,EAAMC,EAASC,EAAcC,GAA4C,IAA3BC,EAA0B,wDACrFC,EAAWC,IAAEC,QAAQP,GAAe,GAAPA,EAEnCQ,IAAK,CACHC,MAAQH,IAAEC,QAAQR,GAAe,kBAAPA,EAC1BW,KAAM,uCAAyCL,EAAU,SACzDM,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbZ,gBAAiBA,IAAoC,EACrDa,mBAAoB,uBACpBC,kBAAmB,eACnBC,gBAAgB,EAChBC,kBAAmBhD,EAAKuB,GACxB0B,cAAc,EACdC,aAAa,EACbjB,iBAAkBA,IAAsC,EACxDH,UACAqB,iBAAkBnD,EAAKqB,SACtB+B,MAAK,SAAAC,GACFA,GAAWA,EAAQC,OACrBvB,GAAgBA,OC7Bf,IAAMwB,EAAmB,mBACnBC,EAAoB,oBCUlBC,G,MARA,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAChB,OACE,yBAAKC,UAAS,iBAAYD,EAAM,YAAc,KAC5C,yBAAKC,UAAU,WAAWC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAT,WCDlDI,G,MAAa,CACjBC,MAAO,QACPC,KAAM,OACNC,MAAO,UAGHC,EAAS,SAAAC,GAAU,IACfC,EAA4ED,EAA5EC,MAAOC,EAAqEF,EAArEE,KAAMC,EAA+DH,EAA/DG,MAAOX,EAAwDQ,EAAxDR,UAAWY,EAA6CJ,EAA7CI,SAAUC,EAAmCL,EAAnCK,QAASC,EAA0BN,EAA1BM,KAAMC,EAAoBP,EAApBO,UAAWC,EAASR,EAATQ,KAErEC,EAAU,eAAWP,GAAQ,GAAnB,YAAyBC,GAAS,GAAlC,YAAwCX,GAAa,IAErE,OACE,uBAAGkB,KAAMJ,GAAQ,sBAAuBd,UAAWiB,EAAYJ,QAASA,GACrED,GAGC,0BAAMZ,UAAS,gBAAmB,IAATgB,EAAgB,OAAS,GAAnC,YAAyCD,GAAaZ,EAAWQ,GAAjE,YAA2ED,IACvFD,KAgBXF,EAAOY,aAAe,CACpBnB,UAAW,GACXW,MAAO,IAGMJ,QCtCTa,G,iNAkBJC,OAAS,SAAAC,GACPA,EAAEC,kBACF,EAAKf,MAAMgB,W,wEAGH,IAAD,EACoEC,KAAKjB,MAAxEI,EADD,EACCA,SAAUc,EADX,EACWA,KAAMC,EADjB,EACiBA,OAAQ3B,EADzB,EACyBA,UAAW4B,EADpC,EACoCA,GAAIjB,EADxC,EACwCA,MAAOkB,EAD/C,EAC+CA,QAASC,EADxD,EACwDA,QAEzDC,EAASF,EAAU,UADNC,EAAU,UAAY,GAEzC,OACE,yBACE9B,UAAS,mBAAc+B,EAAd,YAAwB/B,GAAa,IAC9CC,MAAO,CAAE+B,WAAYL,EAAS,SAAW,IACzCd,QAASY,KAAKJ,QAEd,yBAAKrB,UAAU,SACf,2BAAOA,UAAU,OAAO4B,GAAIA,EAAIK,KAAK,aACpCP,EACC,2BAAO1B,UAAS,mBAAcW,GAASuB,QAASN,GAC7CF,GAGH,2BAAO1B,UAAS,mBAAcW,GAASuB,QAASN,GAC9C,yBAAK5B,UAAS,WAAcY,S,GAzCjBuB,cAAjBf,EAaGD,aAAe,CACpBR,MAAO,OACPkB,SAAS,GAkCET,QCjDTgB,G,iNAwBJC,MAAQ,CACNC,WAAY,EAAK9B,MAAMb,MACvB4C,OAAO,EACPN,KAAM,EAAKzB,MAAMgC,SAAW,WAAa,Q,EAG3CC,MAAQ,WACN,EAAKC,SAAS,CAAEJ,WAAY,M,EAG9BC,MAAQ,WACN,EAAKG,SAAS,CAAEH,OAAO,K,EAGzBI,aAAe,SAAArB,GAAM,IAAD,EACmB,EAAKd,MAAlCoB,EADU,EACVA,GAAIgB,EADM,EACNA,SAAUC,EADJ,EACIA,WACtB,IAAK,EAAKC,SAAU,CAClB,IAAMnD,EAAQ2B,EAAEyB,OAAOpD,MAEvBiD,GAAYA,EAASjD,GACrBkD,GAAcA,EAAWjB,EAAIjC,GAC7B,EAAK+C,SAAS,CAAEJ,WAAY3C,M,EAIhCqD,YAAc,WACZ,EAAKN,SAAS,CAAEH,OAAO,K,EAGzBU,WAAa,WACX,EAAKP,SAAS,CAAEH,OAAO,K,EAGzBW,eAAiB,SAAA5B,GACD,UAAVA,EAAE6B,KACJ,EAAK3C,MAAM4C,SAAW,EAAK5C,MAAM4C,W,wEAI3B,IAAD,SAC6B3B,KAAKY,MAAjCC,EADD,EACCA,WAAYL,EADb,EACaA,KAAMM,EADnB,EACmBA,MADnB,EAE8Dd,KAAKjB,MAAlEoB,EAFD,EAECA,GAAInB,EAFL,EAEKA,MAAO4C,EAFZ,EAEYA,KAAMC,EAFlB,EAEkBA,SAAUtD,EAF5B,EAE4BA,UAAWuD,EAFvC,EAEuCA,YAAa5D,EAFpD,EAEoDA,MAE3D,OACE,yBAAKK,UAAS,6BAAwBA,GAAa,GAArC,YAA2CS,EAAQ,GAAK,aACnEA,GAAS,yBAAKT,UAAS,2BAAsBsD,EAAW,WAAa,KAAO7C,GAC7E,yBAAKT,UAAU,2BACZqD,GAAQ,yBAAKrD,UAAU,0BAA0BD,IAAKsD,EAAMG,IAAI,KACjE,yBAAKxD,UAAS,0BAAqBuC,EAAQ,QAAU,KACnD,2BACEY,IAAKvB,EACL6B,UAAWhC,KAAKjB,MAAMiD,UACtB9D,MAAOA,GAAS2C,EAChBgB,SAAUA,EACVrB,KAAMA,EACNsB,YAAaA,EACbG,OAAQjC,KAAKwB,WACbU,QAASlC,KAAKuB,YACdJ,SAAUnB,KAAKkB,aACfiB,WAAYnC,KAAKyB,eACjBW,IAAK,SAAAC,GAAI,OAAK,EAAKC,MAAQD,Y,GApFrB3B,cAAdC,EAgBGjB,aAAe,CACpBc,KAAM,OACNa,UAAU,EACVF,SAAU,aACVc,OAAQ,aACR/D,MAAO,IAwEIyC,Q,QC3FT4B,G,kBAqBJ,WAAYxD,GAAQ,IAAD,8BACjB,4CAAMA,KAwCRa,OAAS,WACP,EAAKqB,UAAS,SAAAuB,GAAS,MAAK,CAAEC,aAAcD,EAAUC,iBA1CrC,EA6CnBC,WAAa,SAAAC,GACX,EAAK1B,SAAS,CAAE0B,mBAChB,EAAK/C,SACD,EAAKb,MAAMoC,UAAU,EAAKpC,MAAMoC,SAASwB,IAhD5B,EAmDnBC,aAAe,SAAAC,GACb,OACE,yBAAKtE,UAAU,mBACb,kBAAC,EAAD,KAAOsE,EAAO7D,SApDlB,EAAK4B,MAAQ,CACX6B,aAAa,EACbE,eAAgB,CAAEzE,MAAO,GAAIc,MAAO,IACpC8D,aAAc,EAAK/D,MAAM+C,aAG3B,EAAKiB,YAAcC,IAAMC,YARR,E,iFAWE,IAAD,OACZC,EAAaC,eAAKnD,KAAKjB,MAAMqE,QAAS,CAAElF,MAAO8B,KAAKjB,MAAMb,QAC5DgF,GACFlD,KAAKiB,SAAS,CAAE0B,eAAgBO,IAGvBlD,KAAK+C,YAAYM,QAEzBC,iBAAiB,YAAY,WAC9B,EAAKrC,SAAS,CACZwB,aAAa,S,2CAMjB,GAAIzC,KAAKjB,MAAMb,OAAS8B,KAAKjB,MAAMb,QAAU8B,KAAKY,MAAM+B,eAAezE,MAAO,CAC5E,IAAMgF,EAAaC,eAAKnD,KAAKjB,MAAMqE,QAAS,CAAElF,MAAO8B,KAAKjB,MAAMb,QAC5DgF,EACFlD,KAAKiB,SAAS,CAAE0B,eAAgBO,IAEhClD,KAAKiB,SAAS,CAAE0B,eAAgB,CAAEzE,MAAO,GAAIc,MAAO,S,+BA2BhD,IAAD,SACiCgB,KAAKY,MAArC6B,EADD,EACCA,YAAaE,EADd,EACcA,eADd,EAEoF3C,KAAKjB,MAAxFC,EAFD,EAECA,MAAO8C,EAFR,EAEQA,YAAavD,EAFrB,EAEqBA,UAAWqD,EAFhC,EAEgCA,KAAMwB,EAFtC,EAEsCA,QAASR,EAF/C,EAE+CA,aAAcW,EAF7D,EAE6DA,MAAOC,EAFpE,EAEoEA,YACrEC,EAAmBC,qBAAWd,GAAgBA,EAAe5C,KAAK4C,aAClEpD,EAAU,mBAAeiD,EAAc,UAAY,IAEzD,OACE,yBAAKjE,MAAO,CAAE+E,SAAShF,UAAWiB,EAAYmE,SAAS,KAAKvB,IAAKpC,KAAK+C,aACpE,kBAAC,EAAD,CAAMxE,UAAU,eAAeS,GAC/B,yBAAKI,QAASY,KAAKJ,OAAQpB,MAAOgF,EAAajF,UAAS,0BAAqBA,GAAa,KACxF,yBAAKA,UAAU,kBACZqD,GAAQ,yBAAKrD,UAAU,0BAA0BD,IAAKsD,EAAMG,IAAI,KACjE,6BACE,kBAAC,EAAD,CAAMxD,UAAS,kBAAaoE,EAAezE,MAAQ,YAAc,qBAC9DyE,EAAezE,MAAQyE,EAAe3D,MAAQ8C,KAIrD,yBAAKvD,UAAU,QAAQD,IAAKsF,EAAQ,IAA8C7B,IAAI,MAExF,yBAAKxD,UAAU,oBACb,kBAAC,aAAD,CAAYsF,YAAU,GACnBC,cAAIV,GAAS,SAAAP,GACZ,OACE,yBACEzD,QAAS,WACP,EAAKsD,WAAWG,IAElBnB,IAAKmB,EAAO3E,OAEXuF,EAAiBZ,Y,4BAnDhC,OAAO7C,KAAKY,MAAM+B,eAAezE,U,GA3DdwC,cAAjB6B,EAcG7C,aAAe,CAEpBkD,aAAc,KACdW,MAAO,OACPpC,SAAU,cAuGCoB,QC3GAwB,G,MAhBF,SAAAhF,GAAU,IACbb,EAA+Ba,EAA/Bb,MAAOK,EAAwBQ,EAAxBR,UAAWY,EAAaJ,EAAbI,SACpBK,EAAU,eAAWjB,GAAa,IACxC,OACE,uCAAOQ,EAAP,CAAcR,UAAWiB,IACtBL,GAAYjB,KCuDJ8F,G,iNApDbpD,MAAQ,CACNqD,SAAU,EAAKlF,MAAMkF,U,EAgBvBC,MAAQ,WAAO,IACLxH,EAAY,EAAKqC,MAAjBrC,QAER,EAAKuE,SACH,CACEgD,UAAU,IAEZ,WACEE,SAASC,cAAc,QAAQC,UAAU5I,OAAO,cAChDiB,GAAWA,Q,yFAtBS4H,GAAY,IAAD,OACnCtE,KAAKiB,SACH,CACEgD,SAAUK,EAAUL,WAEtB,WACE,EAAKrD,MAAMqD,SACPE,SAASC,cAAc,QAAQC,UAAUE,IAAI,cAC7CJ,SAASC,cAAc,QAAQC,UAAU5I,OAAO,mB,+BAmBhD,IAAD,EACuCuE,KAAKjB,MAA3CR,EADD,EACCA,UAAWiG,EADZ,EACYA,aAAcrF,EAD1B,EAC0BA,SACzB8E,EAAajE,KAAKY,MAAlBqD,SAER,OACE,yBAAK1F,UAAS,gBAAW0F,EAAW,aAAe,GAArC,YAA2C1F,GAAwB,KAC/E,yBAAKA,UAAU,gBACb,yBAAKA,UAAS,kBACViG,GACA,yBAAKjG,UAAU,mBAAmBa,QAASY,KAAKkE,OAC9C,yBAAK3F,UAAU,gBAAf,MAGHY,S,GApDOuB,c,gBC2BL,OAAE+D,SA7BA,CACfzJ,MAAO,CACL0J,MAAO,SAAAxG,GAAK,MAAI,2BAA2ByG,KAAKzG,IAChD0G,YAAa,iBAAO,CAClB1H,MAAOtC,EAAKyB,qBACZS,QAASlC,EAAK0B,uBAwBOuI,yBAb3B,WAAiD,IAAfC,EAAc,uDAAJ,GACpCC,EAAShI,IAAEiI,QAAQF,GAAS3B,MAChC,gBAAG8B,EAAH,EAAGA,QAAS/G,EAAZ,EAAYA,MAAOgH,EAAnB,EAAmBA,aAAnB,OAAuCD,EAAQP,MAAMxG,EAAOgH,MAG9D,OAAIH,EACkBA,EAAOE,QAAQL,cAI9B,O,+jBCpBT,IAAMO,EAAS,CACb,CACEnG,MAAO,SACPd,MAAO,UAET,CACEc,MAAO,SACPd,MAAO,UAET,CACEc,MAAO,SACPd,MAAO,WAILkH,EAAY,CAChB,CACEpG,MAAO,aACPd,MAAO,cAET,CACEc,MAAO,aACPd,MAAO,cAET,CACEc,MAAO,aACPd,MAAO,eAILmH,E,YACJ,WAAYtG,GAAQ,IAAD,uBACjB,4CAAMA,KAeRuG,cAAgB,SAACnF,EAAIjC,GACnB,EAAK+C,SAAL,eACGd,EAAKjC,KAlBS,EAsBnBqH,gBAAkB,WAChB,EAAKC,iBAAiBC,SAvBL,EAqCnBC,iBAAmB,WACjB,EAAKF,iBAAiBtH,MAAQ,GAC9B,EAAKoH,cAAc,SAAU,KAvCZ,EA0CnBK,SAAW,WAAO,IACR3K,EAAU,EAAK4F,MAAf5F,MAEF4K,EAAkB,CACtB,CACEX,QAASY,EAAWpB,SAASzJ,MAC7BkD,MAAOlD,IAIL8K,EAAiBD,EAAWhB,yBAAyBe,GAEvDE,EACFvJ,EAAMuJ,EAAe5I,MAAO4I,EAAehJ,QAAS,CAAC,CAAEmD,KAAMrF,EAAKuB,OAElE,EAAK4C,MAAMgH,SAAX,KAAyB,EAAKnF,QAC9B,EAAK7B,MAAMiH,iBA1DI,IAGTC,EAASlH,EAATkH,KAHS,OAKjB,EAAKrF,MAAL,KACKqF,GANY,E,uFAUO3B,GACxBtE,KAAKiB,SAAL,KACKqD,EAAU2B,S,uCAcApG,GAAI,IAAD,OACZqG,EAAOrG,EAAEyB,OAAO6E,MAAM,GACtBC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,SAAAzG,GACd,EAAKyF,cAAc,SAAUzF,EAAEyB,OAAOyD,SAGxCqB,EAAOG,cAAcL,K,+BA4Bb,IAAD,SAC4BlG,KAAKjB,MAAhCkF,EADD,EACCA,SAAU+B,EADX,EACWA,aADX,EAcHhG,KAAKY,MAXP9F,EAHK,EAGLA,KACAC,EAJK,EAILA,QACAa,EALK,EAKLA,SACAC,EANK,EAMLA,KACAb,EAPK,EAOLA,MACAE,EARK,EAQLA,YACAa,EATK,EASLA,eACAyK,EAVK,EAULA,gBACAC,EAXK,EAWLA,YACAtL,EAZK,EAYLA,IACAuL,EAbK,EAaLA,OAGF,OACE,kBAAC,EAAD,CAAOzC,SAAUA,GACf,yBAAK1F,UAAU,gBACb,wBAAIA,UAAU,mBAAmB3D,EAAKQ,aACtC,yBAAKmD,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAQD,IAAKoI,IACb,yBAAKnI,UAAU,sCACb,kBAAC,EAAD,CACEA,UAAU,OACVa,QAASY,KAAK0F,iBACdpG,UAAU,QACVJ,MAAM,cACNF,MAAOpE,EAAKa,SAEd,kBAAC,EAAD,CACEyD,MAAM,QACNX,UAAU,OACVe,UAAU,QACVN,MAAOpE,EAAKc,YACZ0D,QAASY,KAAKuF,kBAEhB,2BACEnD,IAAK,SAAAuE,GAAE,OAAK,EAAKnB,iBAAmBmB,GACpCxF,SAAU,SAAAtB,GAAC,OAAI,EAAK+G,iBAAiB/G,IACrCtB,UAAU,SACV4B,GAAG,eACHrF,KAAK,eACL0F,KAAK,OACLqG,OAAO,uCAIb,yBAAKtI,UAAU,YACb,wBAAIA,UAAU,QAAQ3D,EAAKsB,UAAU4K,eACrC,kBAAC,EAAD,CACE3G,GAAG,OACHjC,MAAOpD,EACP0F,KAAK,OACLjC,UAAU,aACV6C,WAAYpB,KAAKsF,cACjBxD,YAAalH,EAAKe,UAClBqD,MAAOpE,EAAKe,YAEd,kBAAC,EAAD,CACEwE,GAAG,QACHjC,MAAOlD,EACPwF,KAAK,OACLjC,UAAU,aACV6C,WAAYpB,KAAKsF,cACjBxD,YAAalH,EAAKI,MAClBgE,MAAOpE,EAAKI,QAEd,yBAAKuD,UAAU,4BACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACE4B,GAAG,UACHjC,MAAOnD,EACPyF,KAAK,OACLjC,UAAU,QACV6C,WAAYpB,KAAKsF,cACjBxD,YAAalH,EAAKG,QAClBiE,MAAOpE,EAAKkB,gBAGhB,yBAAKyC,UAAU,YACb,kBAAC,EAAD,CACE4B,GAAG,WACHnB,MAAO,GACP8C,YAAalH,EAAKgB,SAClBuF,SAAU,gBAAGjD,EAAH,EAAGA,MAAH,OAAe,EAAKoH,cAAc,WAAYpH,IACxDkF,QAASgC,EACTlH,MAAOtC,KAGX,yBAAK2C,UAAU,YACb,kBAAC,EAAD,CACE4B,GAAG,OACHnB,MAAO,GACP8C,YAAalH,EAAKiB,KAClBsF,SAAU,gBAAGjD,EAAH,EAAGA,MAAH,OAAe,EAAKoH,cAAc,OAAQpH,IACpDkF,QAAS+B,EACTjH,MAAOrC,MAIb,wBAAI0C,UAAU,QAAQ3D,EAAKK,eAAe6L,eAC1C,kBAAC,EAAD,CACE3G,GAAG,cACHjC,MAAOhD,EACPsF,KAAK,OACLjC,UAAU,aACV6C,WAAYpB,KAAKsF,cACjBxD,YAAalH,EAAKM,YAClB8D,MAAOpE,EAAKM,cAEd,yBAAKqD,UAAU,4BACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACE4B,GAAG,iBACHjC,MAAOnC,EACPyE,KAAK,OACLjC,UAAU,QACV6C,WAAYpB,KAAKsF,cACjBxD,YAAalH,EAAKG,QAClBiE,MAAOpE,EAAKmB,kBAGhB,yBAAKwC,UAAU,YACb,kBAAC,EAAD,CACE4B,GAAG,kBACHnB,MAAO,GACP8C,YAAalH,EAAKgB,SAClBuF,SAAU,gBAAGjD,EAAH,EAAGA,MAAH,OAAe,EAAKoH,cAAc,kBAAmBpH,IAC/DkF,QAASgC,EACTlH,MAAOsI,KAGX,yBAAKjI,UAAU,YACb,kBAAC,EAAD,CACE4B,GAAG,cACHnB,MAAO,GACP8C,YAAalH,EAAKiB,KAClBsF,SAAU,gBAAGjD,EAAH,EAAGA,MAAH,OAAe,EAAKoH,cAAc,cAAepH,IAC3DkF,QAAS+B,EACTjH,MAAOuI,MAIb,kBAAC,EAAD,CACEtG,GAAG,MACHjC,MAAO/C,EACPqF,KAAK,OACLjC,UAAU,aACV6C,WAAYpB,KAAKsF,cACjBxD,YAAalH,EAAKO,IAClB6D,MAAOpE,EAAKO,MAEd,yBAAKoD,UAAU,IACb,kBAAC,EAAD,CACEW,MAAM,QACND,KAAK,MACLV,UAAU,OACVa,QAASY,KAAK2F,SACdrG,UAAU,QACVN,MAAOpE,EAAKoB,OAEd,kBAAC,EAAD,CACEiD,KAAK,MACLC,MAAM,cACNE,QAAS4G,EACT1G,UAAU,QACVN,MAAOpE,EAAKqB,kB,GAvOC+G,IAAMtC,WA0PtBqG,eARS,SAAC,GAGvB,MAAO,CACLd,KAJkC,EAAXe,KACjBf,QASR,CAAEF,SCzQa,SAAAE,GACf,OAAO,SAAAgB,GACL1K,EAAM3B,EAAKwB,YAAa,GAAI,CAAC,CAAE6D,KAAMrF,EAAKuB,MAC1C8K,EAAS,CACPzG,KAAMpC,EACN8I,QAASjB,ODkQAc,CAGb1B,GE9RmB8B,E,2MACnBvG,MAAQ,CACNwG,WAAW,G,EAGbC,eAAiB,SAACC,EAAUC,GAAX,OACf,kBAAC,IAAMC,SAAP,KACE,yBAAKjJ,UAAU,YACb,uBAAGA,UAAU,aAAb,UAA6B+I,EAA7B,OAEF,yBAAK/I,UAAU,YACb,uBAAGA,UAAU,cAAcgJ,M,wEAKvB,IAAD,SAGHvH,KAAKjB,MADPkH,KAAQnL,EAFH,EAEGA,KAAMC,EAFT,EAESA,QAASC,EAFlB,EAEkBA,MAAOE,EAFzB,EAEyBA,YAAaa,EAFtC,EAEsCA,eAAgBZ,EAFtD,EAEsDA,IAAKuL,EAF3D,EAE2DA,OAE1DU,EAAcpH,KAAKY,MAAnBwG,UAER,OACE,yBAAK7I,UAAU,cACb,kBAAC,EAAD,CAAQD,IAAKoI,IACb,yBAAKnI,UAAU,aACb,wBAAIA,UAAU,wBAAwB3D,EAAKC,UAAUiM,eACrD,yBAAKvI,UAAU,OACZyB,KAAKqH,eAAezM,EAAKE,KAAMA,GAC/BkF,KAAKqH,eAAezM,EAAKG,QAASA,GAClCiF,KAAKqH,eAAezM,EAAKI,MAAOA,IAGnC,wBAAIuD,UAAU,6BAA6B3D,EAAKK,eAAe6L,eAC/D,yBAAKvI,UAAU,OACZyB,KAAKqH,eAAezM,EAAKM,YAAaA,GACtC8E,KAAKqH,eAAezM,EAAKG,QAASgB,GAClCiE,KAAKqH,eAAezM,EAAKO,IAAKA,IAGjC,kBAAC,EAAD,CACE8D,KAAK,MACLC,MAAM,QACNX,UAAU,OACVa,QAAS,kBAAM,EAAK6B,SAAS,CAAEmG,WAAW,KAC1C9H,UAAU,QACVN,MAAOpE,EAAKQ,eAGhB,kBAAC,EAAD,CAAkB6I,SAAUmD,EAAWpB,aAAc,kBAAM,EAAK/E,SAAS,CAAEmG,WAAW,Y,GAjD9CpE,IAAMtC,WCFjC+G,E,2MACnB7G,MAAQ,CACN8G,kBAAmB,CACjB,CACEzH,KAAM,8BACNI,SAAS,GAEX,CACEJ,KAAM,GACNI,SAAS,GAEX,CACEJ,KAAM,GACNI,SAAS,GAEX,CACEJ,KAAM,GACNI,SAAS,GAEX,CACEJ,KAAM,GACNI,SAAS,K,EAKfsH,iBAAmB,SAACC,EAAOvH,GAAa,IAC9BqH,EAAsB,EAAK9G,MAA3B8G,kBACRA,EAAkBE,GAAOvH,SAAWA,EAEpC,EAAKY,SAAS,CACZyG,uB,EAIJpC,cAAgB,SAACsC,EAAO1J,GAAW,IACzBwJ,EAAsB,EAAK9G,MAA3B8G,kBACRA,EAAkBE,GAAO3H,KAAO/B,EAEhC,EAAK+C,SAAS,CACZyG,uB,EAIJG,mBAAqB,WAAoBD,GAApB,IAAG3H,EAAH,EAAGA,KAAMI,EAAT,EAASA,QAAT,OACnB,yBAAK9B,UAAU,cAAcmD,IAAKkG,GAChC,kBAAC,EAAD,CAAUrJ,UAAU,OAAO8B,QAASA,EAASN,QAAS,kBAAM,EAAK4H,iBAAiBC,EAAOvH,MACzF,kBAAC,EAAD,CACEF,GAAIyH,EACJ1J,MAAO+B,EACPO,KAAK,OACLjC,UAAU,QACV6C,WAAY,EAAKkE,cACjBxD,YAAalH,EAAKU,qB,wEAKd,IAAD,OACCoM,EAAsB1H,KAAKY,MAA3B8G,kBAER,OACE,yBAAKnJ,UAAU,0BACb,uBAAGA,UAAU,wBAAwB3D,EAAKS,iBACzCqM,EAAkB5D,KAAI,SAACgE,EAAMF,GAAP,OAAiB,EAAKC,mBAAmBC,EAAMF,MACtE,kBAAC,EAAD,CACE3I,KAAK,QACLC,MAAM,QACNX,UAAU,OACVa,QAAS,aACTE,UAAU,QACVN,MAAOpE,EAAKW,c,GAvEuByH,IAAMtC,WCC7CqH,E,4LAEF/H,KAAKjB,MAAMiJ,Y,+BAGH,IACA/B,EAASjG,KAAKjB,MAAdkH,KAER,OACE,yBAAK1H,UAAU,aACb,wBAAIA,UAAU,cAAd,qBACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAoB0H,KAAMA,KAE5B,yBAAK1H,UAAU,YACb,kBAAC,EAAD,a,GAhBOyE,IAAMtC,WAgCVqG,eARS,SAAC,GAGvB,MAAO,CACLd,KAJkC,EAAXe,KACjBf,QASR,CAAE+B,QHlCY,WACd,OAAO,SAAAf,GACLA,EAAS,CACPzG,KAAMrC,EACN+I,QAAS,CACPpM,KAAM,YACNC,QAAS,qBACTa,SAAU,aACVC,KAAM,SACNb,MAAO,iBACPE,YAAa,kCACba,eAAgB,qDAChByK,gBAAiB,GACjBC,YAAa,GACbtL,IAAK,YACLuL,OAAQ,SGiBDK,CAGbgB,GCpBaE,MAdf,WACE,OACE,yBAAK1J,UAAU,aAIb,kBAAC,EAAD,QCAc2J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4kBChBN,IAAMC,EAAe,CACnBtC,KAAM,CACJnL,KAAM,GACNC,QAAS,GACTa,SAAU,GACVC,KAAM,GACNb,MAAO,GACPE,YAAa,GACba,eAAgB,GAChByK,gBAAiB,GACjBC,YAAa,GACbtL,IAAK,GACLuL,OAAQ,KCXZ,IAEe8B,EAFKC,YAAgB,CAAEzB,KDevB,WAA+D,IAAjDpG,EAAgD,uDAAxC2H,EAAwC,yCAAxB/H,EAAwB,EAAxBA,KAAM0G,EAAkB,EAAlBA,QACzD,OAD2E,EAATwB,MAC1DlI,GACN,KAAKrC,EAGL,KAAKC,EACH,OAAO,KAAKwC,EAAZ,CAAmBqF,KAAMiB,IAE3B,QACE,OAAOtG,MEvBE+H,cAAYH,EAAaI,YAAgBC,MCIxDC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEF7E,SAAS8E,eAAe,SJqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpL,MAAK,SAAAqL,GACjCA,EAAaC,kB","file":"static/js/main.cb7e1066.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/collapsible-arrow.ef2915c0.svg\";","export const Lang = {\n  storeInfo: 'Store info',\n  name: 'Name',\n  address: 'Address',\n  phone: 'Phone',\n  redInvoiceInfo: 'Red invoice info',\n  companyName: 'Company Name',\n  mst: 'MST',\n  editProfile: 'Edit Profile',\n  deliveryMessage: 'Delivery default message',\n  writeYourMessage: 'Write your message',\n  update: 'Update',\n  editStoreProfile: 'Edit store profile',\n  remove: 'Remove',\n  uploadImage: 'Upload image',\n  storeName: 'Store name',\n  district: 'District',\n  city: 'City',\n  storeAddress: 'Store address',\n  companyAddress: 'Company address',\n  save: 'Save',\n  cancel: 'Cancel',\n  basicInfo: 'Basic info',\n  ok: 'OK',\n  saveSuccess: 'Save success',\n  incorrectPhoneFormat: 'Error',\n  messagePhoneFormat: 'Format phone should be (XXX) XXX-XXXX',\n}\n","import swal from 'sweetalert2'\nimport _ from 'lodash'\nimport { Lang } from 'constants/language'\n\nexport { Alert }\n\nfunction Alert(head, body, onClose, clickConfirm, showCloseButton, showCancelButton = false) {\n  const message = !_.isEmpty(body) ? body : ''\n\n  swal({\n    title: !_.isEmpty(head) ? head : 'Server Error...',\n    html: '<pre style=\"white-space: pre-wrap;\">' + message + '</pre>',\n    imageUrl: '',\n    imageWidth: 76,\n    imageHeight: 76,\n    imageAlt: '',\n    customClass: '',\n    showCloseButton: showCloseButton ? showCloseButton : true,\n    confirmButtonClass: 'btn green text white',\n    cancelButtonClass: 'btn white h4',\n    buttonsStyling: false,\n    confirmButtonText: Lang.ok,\n    focusConfirm: true,\n    focusCancel: true,\n    showCancelButton: showCancelButton ? showCancelButton : false,\n    onClose,\n    cancelButtonText: Lang.cancel,\n  }).then(confirm => {\n    if (confirm && confirm.value) {\n      clickConfirm && clickConfirm()\n    }\n  })\n}\n","export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\nexport const SAVE_DATA_SUCCESS = 'SAVE_DATA_SUCCESS'\n","import React from 'react'\nimport './Avatar.scss'\n\nconst Avatar = ({ src }) => {\n  return (\n    <div className={`avatar ${src ? 'has-image' : ''}`}>\n      <div className=\"bg-image\" style={{ backgroundImage: `url(${src})` }}></div>\n    </div>\n  )\n}\n\nexport default Avatar\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Button.scss'\n\nconst textMapper = {\n  white: 'white',\n  gray: 'gray',\n  black: 'black',\n}\n\nconst Button = props => {\n  const { label, size, color, className, children, onClick, link, textColor, bold } = props\n\n  const classNames = `btn  ${size || ''} ${color || ''} ${className || ''}`\n\n  return (\n    <a href={link || 'javascript: void(0)'} className={classNames} onClick={onClick}>\n      {children ? (\n        children\n      ) : (\n        <span className={`text ${bold === true ? 'bold' : ''} ${textColor || textMapper[color]} ${size}`}>\n          {label}\n        </span>\n      )}\n    </a>\n  )\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  size: PropTypes.oneOf(['small', 'big']),\n  color: PropTypes.oneOf(['white', 'black', 'gray', 'gray1', 'green', 'transparent']),\n  label: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.any,\n}\n\nButton.defaultProps = {\n  className: '',\n  color: '',\n}\n\nexport default Button\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Checkbox.scss'\n\nclass Checkbox extends Component {\n  static propTypes = {\n    checked: PropTypes.bool,\n    blocked: PropTypes.bool,\n    children: PropTypes.node,\n    text: PropTypes.string,\n    center: PropTypes.bool,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    color: PropTypes.string,\n    onCheck: PropTypes.func,\n  }\n\n  static defaultProps = {\n    color: '\u001c',\n    blocked: false,\n  }\n\n  toggle = e => {\n    e.stopPropagation()\n    this.props.onCheck()\n  }\n\n  render() {\n    const { children, text, center, className, id, color, blocked, checked } = this.props\n    const statusHold = checked ? 'checked' : ''\n    const status = blocked ? 'blocked' : statusHold\n    return (\n      <div\n        className={`checkbox ${status} ${className || ''}`}\n        style={{ alignItems: center ? 'center' : '' }}\n        onClick={this.toggle}\n      >\n        <div className=\"icon\" />\n        <input className=\"hide\" id={id} type=\"checkbox\" />\n        {text ? (\n          <label className={`pad-left ${color}`} htmlFor={id}>\n            {text}\n          </label>\n        ) : (\n          <label className={`pad-left ${color}`} htmlFor={id}>\n            <div className={`content`}>{children}</div>\n          </label>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Checkbox\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Input.scss'\n\nclass Input extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    icon: PropTypes.string,\n    label: PropTypes.string,\n    readonly: PropTypes.bool,\n    disabled: PropTypes.bool,\n    password: PropTypes.bool,\n    placeholder: PropTypes.string,\n    className: PropTypes.string,\n    customStyle: PropTypes.object,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    onBlur: PropTypes.func,\n  }\n\n  static defaultProps = {\n    type: 'text',\n    readonly: false,\n    onChange: () => {},\n    onBlur: () => {},\n    value: '',\n  }\n\n  state = {\n    stateValue: this.props.value,\n    focus: false,\n    type: this.props.password ? 'password' : 'text',\n  }\n\n  clear = () => {\n    this.setState({ stateValue: '' })\n  }\n\n  focus = () => {\n    this.setState({ focus: true })\n  }\n\n  handleChange = e => {\n    const { id, onChange, onChangeId } = this.props\n    if (!this.readonly) {\n      const value = e.target.value\n\n      onChange && onChange(value)\n      onChangeId && onChangeId(id, value)\n      this.setState({ stateValue: value })\n    }\n  }\n\n  handleFocus = () => {\n    this.setState({ focus: true })\n  }\n\n  handleBlur = () => {\n    this.setState({ focus: false })\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      this.props.onEnter && this.props.onEnter()\n    }\n  }\n\n  render() {\n    const { stateValue, type, focus } = this.state\n    const { id, label, icon, disabled, className, placeholder, value } = this.props\n\n    return (\n      <div className={`sc-input-container ${className || ''} ${label ? '' : 'no-label'}`}>\n        {label && <div className={`label text small ${disabled ? 'disabled' : ''}`}>{label}</div>}\n        <div className=\"d-flex align-left flex1\">\n          {icon && <img className=\"mar-right-sm extra-icon\" src={icon} alt=\"\" />}\n          <div className={`input-container ${focus ? 'focus' : ''}`}>\n            <input\n              key={id}\n              autoFocus={this.props.autoFocus}\n              value={value || stateValue}\n              disabled={disabled}\n              type={type}\n              placeholder={placeholder}\n              onBlur={this.handleBlur}\n              onFocus={this.handleFocus}\n              onChange={this.handleChange}\n              onKeyPress={this.handleKeyPress}\n              ref={node => (this.input = node)}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Input\n","import { map, isFunction, find } from 'lodash'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text } from 'components'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport './Dropdown.scss'\n\nclass Dropdown extends Component {\n  static propTypes = {\n    icon: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    className: PropTypes.string,\n    renderOption: PropTypes.func,\n    onChange: PropTypes.func,\n    options: PropTypes.array.isRequired,\n    width: PropTypes.string, //in row\n    value: PropTypes.any,\n    customStyle: PropTypes.object,\n  }\n\n  static defaultProps = {\n    // placeholder: 'Please select',\n    renderOption: null,\n    width: 'auto', //in row\n    onChange: () => {},\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      showOptions: false,\n      selectedOption: { value: '', label: '' },\n      selectedItem: this.props.placeholder,\n    }\n\n    this.dropdownRef = React.createRef()\n  }\n\n  componentDidMount() {\n    const nextOption = find(this.props.options, { value: this.props.value })\n    if (nextOption) {\n      this.setState({ selectedOption: nextOption })\n    }\n\n    const el = this.dropdownRef.current\n\n    el.addEventListener('focusout', () => {\n      this.setState({\n        showOptions: false,\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.props.value && this.props.value !== this.state.selectedOption.value) {\n      const nextOption = find(this.props.options, { value: this.props.value })\n      if (nextOption) {\n        this.setState({ selectedOption: nextOption })\n      } else {\n        this.setState({ selectedOption: { value: '', label: '' } })\n      }\n    }\n  }\n\n  get value() {\n    return this.state.selectedOption.value\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ showOptions: !prevState.showOptions }))\n  }\n\n  selectItem = selectedOption => {\n    this.setState({ selectedOption })\n    this.toggle()\n    if (this.props.onChange) this.props.onChange(selectedOption)\n  }\n\n  renderOption = option => {\n    return (\n      <div className=\"dropdown-option\">\n        <Text>{option.label}</Text>\n      </div>\n    )\n  }\n\n  render() {\n    const { showOptions, selectedOption } = this.state\n    const { label, placeholder, className, icon, options, renderOption, width, customStyle } = this.props\n    const renderOptionFunc = isFunction(renderOption) ? renderOption : this.renderOption\n    const classNames = `dropdown ${showOptions ? 'is-open' : ''}`\n\n    return (\n      <div style={{ width }} className={classNames} tabIndex=\"-1\" ref={this.dropdownRef}>\n        <Text className=\"small label\">{label}</Text>\n        <div onClick={this.toggle} style={customStyle} className={`dropdown-header ${className || ''}`}>\n          <div className=\"row align-left\">\n            {icon && <img className=\"mar-right-sm extra-icon\" src={icon} alt=\"\" />}\n            <div>\n              <Text className={`medium  ${selectedOption.value ? 'text-dark' : 'text-placeholder'}`}>\n                {selectedOption.value ? selectedOption.label : placeholder}\n              </Text>\n            </div>\n          </div>\n          <img className=\"arrow\" src={require('assets/images/icons/collapsible-arrow.svg')} alt=\"\" />\n        </div>\n        <div className=\"dropdown-content\">\n          <Scrollbars autoHeight>\n            {map(options, option => {\n              return (\n                <div\n                  onClick={() => {\n                    this.selectItem(option)\n                  }}\n                  key={option.value}\n                >\n                  {renderOptionFunc(option)}\n                </div>\n              )\n            })}\n          </Scrollbars>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Dropdown\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Text.scss'\n\nconst Text = props => {\n  const { value, className, children } = props\n  const classNames = `text ${className || ''}`\n  return (\n    <p {...props} className={classNames}>\n      {children || value}\n    </p>\n  )\n}\n\nText.propTypes = {\n  value: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nexport default Text\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './Modal.scss'\n\nclass Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    hideCloseBtn: PropTypes.bool,\n  }\n\n  state = {\n    isActive: this.props.isActive,\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState(\n      {\n        isActive: nextProps.isActive,\n      },\n      () => {\n        this.state.isActive\n          ? document.querySelector('body').classList.add('modal-open')\n          : document.querySelector('body').classList.remove('modal-open')\n      }\n    )\n  }\n\n  close = () => {\n    const { onClose } = this.props\n\n    this.setState(\n      {\n        isActive: false,\n      },\n      () => {\n        document.querySelector('body').classList.remove('modal-open')\n        onClose && onClose()\n      }\n    )\n  }\n\n  render() {\n    const { className, hideCloseBtn, children } = this.props\n    const { isActive } = this.state\n\n    return (\n      <div className={`modal ${isActive ? 'modal-open' : ''} ${className ? className : ''}`}>\n        <div className=\"modal-dialog\">\n          <div className={`modal-content`}>\n            {!hideCloseBtn && (\n              <div className=\"cancel-btn-modal\" onClick={this.close}>\n                <div className=\"close-button\">X</div>\n              </div>\n            )}\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Modal\n","import { Lang } from 'constants/language'\nimport _ from 'lodash'\n\nconst checkers = {\n  phone: {\n    check: value => /^\\(\\d{3}\\)\\s\\d{3}-\\d{4}$/.test(value),\n    invalidInfo: () => ({\n      title: Lang.incorrectPhoneFormat,\n      message: Lang.messagePhoneFormat,\n    }),\n  },\n}\n\n/**\n *\n * @param {*} source\n * soures is an array of validation source object\n * soure contain 3 properties 'type' 'value' 'comparevalue'\n */\nfunction getInvalidValidationFrom(sources = []) {\n  const result = _.compact(sources).find(\n    ({ checker, value, compareValue }) => !checker.check(value, compareValue)\n  )\n\n  if (result) {\n    const invalidInfo = result.checker.invalidInfo()\n    return invalidInfo\n  }\n\n  return null\n}\n\nexport default { checkers, getInvalidValidationFrom }\n","import React from 'react'\nimport { Avatar, Button, Modal, Input, Dropdown } from 'components'\nimport { Lang } from 'constants/language'\nimport { Alert } from 'actions/common'\nimport { postData } from 'actions'\nimport { connect } from 'react-redux'\nimport Validation from 'services/validation'\nimport './EditProfileModal.scss'\n\nconst cities = [\n  {\n    label: 'City 1',\n    value: 'city 1',\n  },\n  {\n    label: 'City 2',\n    value: 'city 2',\n  },\n  {\n    label: 'City 3',\n    value: 'city 3',\n  },\n]\n\nconst districts = [\n  {\n    label: 'District 1',\n    value: 'district 1',\n  },\n  {\n    label: 'District 2',\n    value: 'district 2',\n  },\n  {\n    label: 'District 3',\n    value: 'district 3',\n  },\n]\n\nclass EditProfileModal extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const { data } = props\n\n    this.state = {\n      ...data,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      ...nextProps.data,\n    })\n  }\n\n  onChangeInput = (id, value) => {\n    this.setState({\n      [id]: value,\n    })\n  }\n\n  openImagePicker = () => {\n    this.documentImgInput.click()\n  }\n\n  handleFileUpload(e) {\n    const file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.onload = e => {\n      this.onChangeInput('srcImg', e.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  removeFileUpload = () => {\n    this.documentImgInput.value = ''\n    this.onChangeInput('srcImg', '')\n  }\n\n  saveData = () => {\n    const { phone } = this.state\n\n    const validateSources = [\n      {\n        checker: Validation.checkers.phone,\n        value: phone,\n      },\n    ]\n\n    const invalidateInfo = Validation.getInvalidValidationFrom(validateSources)\n\n    if (invalidateInfo) {\n      Alert(invalidateInfo.title, invalidateInfo.message, [{ text: Lang.ok }])\n    } else {\n      this.props.postData({ ...this.state })\n      this.props.onCloseModal()\n    }\n  }\n\n  render() {\n    const { isActive, onCloseModal } = this.props\n    const {\n      name,\n      address,\n      district,\n      city,\n      phone,\n      companyName,\n      companyAddress,\n      companyDistrict,\n      companyCity,\n      mst,\n      srcImg,\n    } = this.state\n\n    return (\n      <Modal isActive={isActive}>\n        <div className=\"edit-profile\">\n          <h2 className=\"title-page mb-2\">{Lang.editProfile}</h2>\n          <div className=\"row\">\n            <div className=\"col-lg-4\">\n              <Avatar src={srcImg} />\n              <div className=\"d-flex justify-content-around mb-2\">\n                <Button\n                  className=\"mt-2\"\n                  onClick={this.removeFileUpload}\n                  textColor=\"black\"\n                  color=\"transparent\"\n                  label={Lang.remove}\n                />\n                <Button\n                  color=\"gray1\"\n                  className=\"mt-2\"\n                  textColor=\"black\"\n                  label={Lang.uploadImage}\n                  onClick={this.openImagePicker}\n                />\n                <input\n                  ref={el => (this.documentImgInput = el)}\n                  onChange={e => this.handleFileUpload(e)}\n                  className=\"hidden\"\n                  id=\"document-img\"\n                  name=\"document-img\"\n                  type=\"file\"\n                  accept=\"image/gif, image/jpeg, image/png\"\n                />\n              </div>\n            </div>\n            <div className=\"col-lg-8\">\n              <h4 className=\"mb-2\">{Lang.basicInfo.toUpperCase()}</h4>\n              <Input\n                id=\"name\"\n                value={name}\n                type=\"text\"\n                className=\"flex1 mb-2\"\n                onChangeId={this.onChangeInput}\n                placeholder={Lang.storeName}\n                label={Lang.storeName}\n              />\n              <Input\n                id=\"phone\"\n                value={phone}\n                type=\"text\"\n                className=\"flex1 mb-2\"\n                onChangeId={this.onChangeInput}\n                placeholder={Lang.phone}\n                label={Lang.phone}\n              />\n              <div className=\"row mb-2 align-items-end\">\n                <div className=\"col-lg-6\">\n                  <Input\n                    id=\"address\"\n                    value={address}\n                    type=\"text\"\n                    className=\"flex1\"\n                    onChangeId={this.onChangeInput}\n                    placeholder={Lang.address}\n                    label={Lang.storeAddress}\n                  />\n                </div>\n                <div className=\"col-lg-3\">\n                  <Dropdown\n                    id=\"district\"\n                    label={''}\n                    placeholder={Lang.district}\n                    onChange={({ value }) => this.onChangeInput('district', value)}\n                    options={districts}\n                    value={district}\n                  />\n                </div>\n                <div className=\"col-lg-3\">\n                  <Dropdown\n                    id=\"city\"\n                    label={''}\n                    placeholder={Lang.city}\n                    onChange={({ value }) => this.onChangeInput('city', value)}\n                    options={cities}\n                    value={city}\n                  />\n                </div>\n              </div>\n              <h4 className=\"mb-2\">{Lang.redInvoiceInfo.toUpperCase()}</h4>\n              <Input\n                id=\"companyName\"\n                value={companyName}\n                type=\"text\"\n                className=\"flex1 mb-2\"\n                onChangeId={this.onChangeInput}\n                placeholder={Lang.companyName}\n                label={Lang.companyName}\n              />\n              <div className=\"row mb-2 align-items-end\">\n                <div className=\"col-lg-6\">\n                  <Input\n                    id=\"companyAddress\"\n                    value={companyAddress}\n                    type=\"text\"\n                    className=\"flex1\"\n                    onChangeId={this.onChangeInput}\n                    placeholder={Lang.address}\n                    label={Lang.companyAddress}\n                  />\n                </div>\n                <div className=\"col-lg-3\">\n                  <Dropdown\n                    id=\"companyDistrict\"\n                    label={''}\n                    placeholder={Lang.district}\n                    onChange={({ value }) => this.onChangeInput('companyDistrict', value)}\n                    options={districts}\n                    value={companyDistrict}\n                  />\n                </div>\n                <div className=\"col-lg-3\">\n                  <Dropdown\n                    id=\"companyCity\"\n                    label={''}\n                    placeholder={Lang.city}\n                    onChange={({ value }) => this.onChangeInput('companyCity', value)}\n                    options={cities}\n                    value={companyCity}\n                  />\n                </div>\n              </div>\n              <Input\n                id=\"mst\"\n                value={mst}\n                type=\"text\"\n                className=\"flex1 mb-2\"\n                onChangeId={this.onChangeInput}\n                placeholder={Lang.mst}\n                label={Lang.mst}\n              />\n              <div className=\"\">\n                <Button\n                  color=\"green\"\n                  size=\"big\"\n                  className=\"mt-2\"\n                  onClick={this.saveData}\n                  textColor=\"white\"\n                  label={Lang.save}\n                />\n                <Button\n                  size=\"big\"\n                  color=\"transparent\"\n                  onClick={onCloseModal}\n                  textColor=\"black\"\n                  label={Lang.cancel}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = ({ temp }) => {\n  const { data } = temp\n\n  return {\n    data,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { postData }\n)(EditProfileModal)\n","import { Alert } from './common'\nimport { Lang } from 'constants/language'\n\nimport { GET_DATA_SUCCESS, SAVE_DATA_SUCCESS } from 'constants/temp'\n\nconst getData = () => {\n  return dispatch => {\n    dispatch({\n      type: GET_DATA_SUCCESS,\n      payload: {\n        name: 'K.O.I The',\n        address: 'Ho Tung Mau, TPHCM',\n        district: 'district 1',\n        city: 'city 2',\n        phone: '(338) 886-9944',\n        companyName: 'K.O.I The International Company',\n        companyAddress: '9862 Wakehurst Avenue Arlington Heights, IL 600004',\n        companyDistrict: '',\n        companyCity: '',\n        mst: 'P77744944',\n        srcImg: '',\n      },\n    })\n  }\n}\n\nconst postData = data => {\n  return dispatch => {\n    Alert(Lang.saveSuccess, '', [{ text: Lang.ok }])\n    dispatch({\n      type: SAVE_DATA_SUCCESS,\n      payload: data,\n    })\n  }\n}\n\nexport { getData, postData }\n","import React from 'react'\nimport { Avatar, Button } from 'components'\nimport { Lang } from 'constants/language'\nimport './ProfileInformation.scss'\nimport EditProfileModal from '../EditProfileModal/EditProfileModal'\n\nexport default class ProfileInformation extends React.Component {\n  state = {\n    openModal: false,\n  }\n\n  renderInfoText = (leftText, rightText) => (\n    <React.Fragment>\n      <div className=\"col-xs-5\">\n        <p className=\"text gray\">{`${leftText}:`}</p>\n      </div>\n      <div className=\"col-xs-7\">\n        <p className=\"text black\">{rightText}</p>\n      </div>\n    </React.Fragment>\n  )\n\n  render() {\n    const {\n      data: { name, address, phone, companyName, companyAddress, mst, srcImg },\n    } = this.props\n    const { openModal } = this.state\n\n    return (\n      <div className=\"panel mb-2\">\n        <Avatar src={srcImg} />\n        <div className=\"show-info\">\n          <h4 className=\"title-info mt-2 mb-1\">{Lang.storeInfo.toUpperCase()}</h4>\n          <div className=\"row\">\n            {this.renderInfoText(Lang.name, name)}\n            {this.renderInfoText(Lang.address, address)}\n            {this.renderInfoText(Lang.phone, phone)}\n          </div>\n\n          <h4 className=\"title-info mt-2 mt-2 mb-1\">{Lang.redInvoiceInfo.toUpperCase()}</h4>\n          <div className=\"row\">\n            {this.renderInfoText(Lang.companyName, companyName)}\n            {this.renderInfoText(Lang.address, companyAddress)}\n            {this.renderInfoText(Lang.mst, mst)}\n          </div>\n\n          <Button\n            size=\"big\"\n            color=\"gray1\"\n            className=\"mt-1\"\n            onClick={() => this.setState({ openModal: true })}\n            textColor=\"black\"\n            label={Lang.editProfile}\n          />\n        </div>\n        <EditProfileModal isActive={openModal} onCloseModal={() => this.setState({ openModal: false })} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Input, Button, Checkbox } from 'components'\nimport { Lang } from 'constants/language'\n\nexport default class DeliveryMessage extends React.Component {\n  state = {\n    deliveryMessageId: [\n      {\n        text: 'Lorem ipsum is dolor assets',\n        checked: true,\n      },\n      {\n        text: '',\n        checked: false,\n      },\n      {\n        text: '',\n        checked: false,\n      },\n      {\n        text: '',\n        checked: false,\n      },\n      {\n        text: '',\n        checked: false,\n      },\n    ],\n  }\n\n  onChangeCheckbox = (index, checked) => {\n    const { deliveryMessageId } = this.state\n    deliveryMessageId[index].checked = !checked\n\n    this.setState({\n      deliveryMessageId,\n    })\n  }\n\n  onChangeInput = (index, value) => {\n    const { deliveryMessageId } = this.state\n    deliveryMessageId[index].text = value\n\n    this.setState({\n      deliveryMessageId,\n    })\n  }\n\n  renderInputMessage = ({ text, checked }, index) => (\n    <div className=\"d-flex mt-1\" key={index}>\n      <Checkbox className=\"mr-1\" checked={checked} onCheck={() => this.onChangeCheckbox(index, checked)} />\n      <Input\n        id={index}\n        value={text}\n        type=\"text\"\n        className=\"flex1\"\n        onChangeId={this.onChangeInput}\n        placeholder={Lang.writeYourMessage}\n      />\n    </div>\n  )\n\n  render() {\n    const { deliveryMessageId } = this.state\n\n    return (\n      <div className=\"panel delivery-message\">\n        <p className=\"text black uppercase\">{Lang.deliveryMessage}</p>\n        {deliveryMessageId.map((item, index) => this.renderInputMessage(item, index))}\n        <Button\n          size=\"small\"\n          color=\"gray1\"\n          className=\"mt-2\"\n          onClick={() => {}}\n          textColor=\"black\"\n          label={Lang.update}\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getData } from 'actions'\nimport { ProfileInformation, DeliveryMessage } from 'modules/StoreInformation/components'\n\nclass Home extends React.Component {\n  componentDidMount() {\n    this.props.getData()\n  }\n\n  render() {\n    const { data } = this.props\n\n    return (\n      <div className=\"pt-3 pb-3\">\n        <h2 className=\"title-page\">Store Information</h2>\n        <div className=\"row mt-2\">\n          <div className=\"col-md-4\">\n            <ProfileInformation data={data} />\n          </div>\n          <div className=\"col-md-8\">\n            <DeliveryMessage />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ temp }) => {\n  const { data } = temp\n\n  return {\n    data,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { getData }\n)(Home)\n","import React from 'react'\n\nimport './App.css'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Home } from 'modules/StoreInformation'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      {/* <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact> */}\n      <Home />\n      {/* </Route>\n        </Switch>\n      </BrowserRouter> */}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_DATA_SUCCESS, SAVE_DATA_SUCCESS } from 'constants/temp'\n\nconst initialState = {\n  data: {\n    name: '',\n    address: '',\n    district: '',\n    city: '',\n    phone: '',\n    companyName: '',\n    companyAddress: '',\n    companyDistrict: '',\n    companyCity: '',\n    mst: '',\n    srcImg: '',\n  },\n}\n\nexport default function temp(state = initialState, { type, payload, error }) {\n  switch (type) {\n    case GET_DATA_SUCCESS:\n      return { ...state, data: payload }\n\n    case SAVE_DATA_SUCCESS:\n      return { ...state, data: payload }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport temp from './temp'\n\nconst rootReducer = combineReducers({ temp })\n\nexport default rootReducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from 'reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport store from 'configs/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}